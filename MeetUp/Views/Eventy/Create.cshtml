@model MeetUp.Models.Event

@{
    ViewBag.Title = "Create";
}
<style>
    #map {
        height: 500px;
        width: 650px;
        margin-bottom: 15px;

    }

    #pac-input {
        width: 100%;
        padding: 15px;
        margin: px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }

        #pac-input:focus {
            border-color: #4d90fe;
        }

    input[type=text], input[type=date], input[type=time] {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }

        input[type=text]:focus {
            background-color: #ddd;
            outline: none;
        }

    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
        border-color: #FDA439;
    }

    .createbtn {
        background-color: #FDA439;
        color: #4D0848;
        padding: 16px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
        opacity: 0.9;
    }

        .createbtn:hover {
            opacity: 1;
        }

    .error {
        color: red;
    }
</style>
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Event</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-offset-2 col-md-10">
        <input id="pac-input" class="controls" type="text" placeholder="Wyszukaj miejsce">
        <div id="map"></div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, new { type = "date", placeholder = "dd.mm.yyyy" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
            <div>

            </div>
        </div>

        <script src="~/Scripts/map.js"></script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBzld3mABGGOnrO0dafBTt5zUwqoo6b5Wc&libraries=places&callback=initAutocomplete"
                async defer></script>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


